; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --thumb --list --split_sections --debug -c --asm --interleave -o.\obj\bim_app.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\bim_app.d --cpu=ARM9E --apcs=interwork -O3 --diag_suppress=9931 -I.\config -I.\app -I..\..\libs -I..\..\sdk\plactform\core_modules\src -I..\..\sdk\plactform\arch -I..\..\sdk\plactform\arch\compiler -I..\..\sdk\plactform\arch\ll -I..\..\sdk\plactform\core_modules\common\api -I..\..\sdk\plactform\arch\boot -I..\..\sdk\plactform\core_modules\dbg\api -I..\..\sdk\plactform\core_modules\rf\api -I..\..\sdk\plactform\core_modules\ecc_p256\api -I..\..\sdk\plactform\arch\main -I..\..\sdk\plactform\core_modules\util -I..\..\sdk\plactform\driver\pwm -I..\..\sdk\plactform\driver\adc -I..\..\sdk\plactform\driver\audio -I..\..\sdk\plactform\driver\wdt -I..\..\sdk\plactform\driver\rtc -I..\..\sdk\plactform\driver\i2c -I..\..\sdk\plactform\driver\utc -I..\..\sdk\plactform\driver\ir -I..\..\sdk\plactform\driver\spi -I..\..\sdk\plactform\driver\plf -I..\..\sdk\plactform\driver\counter -I..\..\sdk\plactform\driver\gpio -I..\..\sdk\plactform\driver\intcntl -I..\..\sdk\plactform\driver\icu -I..\..\sdk\plactform\driver\intc -I..\..\sdk\plactform\driver\flash -I..\..\sdk\plactform\driver\timer -I..\..\sdk\plactform\driver\reg -I..\..\sdk\plactform\driver\uart -I..\..\sdk\plactform\driver\emi -I..\..\sdk\ble_stack\com\rwble -I..\..\sdk\ble_stack\com\rwble_hl -I..\..\sdk\ble_stack\com\rwble -I..\..\sdk\ble_stack\com\rwip\api -I..\..\sdk\ble_stack\com\rwble_hl -I..\..\sdk\ble_stack\src -I..\..\sdk\plactform\reg -I..\..\sdk\plactform\driver\syscntl -I..\..\sdk\plactform\rom\hci -I..\..\sdk\plactform\core_modules\ecc_p256\api -I..\..\sdk\ble_stack\inc -I..\..\sdk\ble_stack\inc\hci -I..\..\sdk\ble_stack\inc\h4tl -I..\..\sdk\ble_stack\inc\ke -I..\..\sdk\ble_stack\inc\nvds -I..\..\sdk\ble_stack\inc\ea -I..\..\sdk\ble_stack\inc\em -I..\..\sdk\ble_stack\inc\ahi -I..\..\sdk\ble_stack\inc\ble\hl\gap\gapc -I..\..\sdk\ble_stack\inc\ble\hl\gap\gapm -I..\..\sdk\ble_stack\inc\ble\hl\gap\smpc -I..\..\sdk\ble_stack\inc\ble\hl\gap\smpm -I..\..\sdk\ble_stack\inc\ble\hl\gatt\attc -I..\..\sdk\ble_stack\inc\ble\hl\gatt\attm -I..\..\sdk\ble_stack\inc\ble\hl\gatt\atts -I..\..\sdk\ble_stack\inc\ble\hl\gatt\gattc -I..\..\sdk\ble_stack\inc\ble\hl\gatt\gattm -I..\..\sdk\ble_stack\inc\ble\hl\l2c\l2cc -I..\..\sdk\ble_stack\inc\ble\hl\l2c\l2cm -I..\..\sdk\ble_stack\inc\ble\ll\em -I..\..\sdk\ble_stack\inc\ble\ll\llc -I..\..\sdk\ble_stack\inc\ble\ll\lld -I..\..\sdk\ble_stack\inc\ble\ll\llm -I..\..\sdk\ble_stack\com\rwip\api -I..\..\sdk\ble_stack\inc\ble\hl\gap -I..\..\sdk\ble_stack\inc\ble\hl\gatt -I..\..\sdk\ble_stack\com\prf -I..\..\sdk\ble_stack\com\profiles\dis\diss\src -I..\..\sdk\ble_stack\com\profiles\bas\bass\src -I..\..\sdk\ble_stack\com\profiles\ancs\ancsc\api -I..\..\sdk\ble_stack\com\profiles\ancs\ancsc\src -I..\..\sdk\ble_stack\com\profiles\ancs -I..\..\sdk\ble_stack\com\profiles\FCC0\api -I..\..\sdk\ble_stack\com\profiles\FCC0\src -I..\..\sdk\ble_stack\com\profiles\FCC0\util -I..\..\sdk\ble_stack\com\profiles\FEE0\api -I..\..\sdk\ble_stack\com\profiles\FEE0\src -I..\..\sdk\ble_stack\com\profiles\hogp -I..\..\sdk\ble_stack\com\profiles\hogp\hogpd\api -I..\..\sdk\ble_stack\com\profiles\hogp\hogpd\src -I..\..\libs -I..\..\sdk\ble_stack\com\profiles\wechat\api -I..\..\sdk\ble_stack\com\profiles\wechat\src -I.\wechat -I..\..\sdk\ble_stack\com\profiles\bas\bass -I..\..\sdk\ble_stack\com\profiles\bas\bass\api -I..\..\sdk\ble_stack\com\profiles\dis\diss -I..\..\sdk\ble_stack\com\profiles\dis\diss\api -I..\..\sdk\ble_stack\com\profiles\FFF0\api -I..\..\sdk\ble_stack\com\profiles\FFF0 -I..\..\sdk\ble_stack\com\profiles\oad\api -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 --omf_browse=.\obj\bim_app.crf app\bim_app.c]
                          THUMB

                          AREA ||i.bim_icu_init||, CODE, READONLY, ALIGN=2

                  bim_icu_init PROC
;;;25     
;;;26     void bim_icu_init(uint8_t clk)
000000  480d              LDR      r0,|L1.56|
;;;27     {
;;;28     	REG_AHB0_ICU_FLASH &= ~(0xff << 16);
000002  68c1              LDR      r1,[r0,#0xc]
000004  22ff              MOVS     r2,#0xff
000006  0412              LSLS     r2,r2,#16
000008  4391              BICS     r1,r1,r2
00000a  60c1              STR      r1,[r0,#0xc]
;;;29     	REG_AHB0_ICU_FLASH |= (0x15 << 16);
00000c  68c1              LDR      r1,[r0,#0xc]
00000e  2215              MOVS     r2,#0x15
000010  0412              LSLS     r2,r2,#16
000012  4311              ORRS     r1,r1,r2
000014  60c1              STR      r1,[r0,#0xc]
;;;30     	REG_AHB0_ICU_CPU_STATUS  = 0x771;
000016  4a09              LDR      r2,|L1.60|
000018  0441              LSLS     r1,r0,#17
00001a  638a              STR      r2,[r1,#0x38]
;;;31     
;;;32     	REG_AHB0_ICU_DIGITAL_PWD = REG_AHB0_ICU_DIGITAL_PWD & (~0X02);
00001c  69c2              LDR      r2,[r0,#0x1c]
00001e  2302              MOVS     r3,#2
000020  439a              BICS     r2,r2,r3
000022  61c2              STR      r2,[r0,#0x1c]
;;;33     	REG_AHB0_ICU_CORECLKCON = 0X00;  //clk div 0
000024  2000              MOVS     r0,#0
000026  6048              STR      r0,[r1,#4]
;;;34     	REG_AHB0_ICU_CLKSRCSEL = 0X000001F9; //usr 16m, sel=0, dec=7,normal=7
000028  20ff              MOVS     r0,#0xff
00002a  30fa              ADDS     r0,r0,#0xfa
00002c  6008              STR      r0,[r1,#0]
;;;35     	REG_AHB0_ICU_ANA_CTL &= ~(0X01 << 6);
00002e  6b48              LDR      r0,[r1,#0x34]
000030  2240              MOVS     r2,#0x40
000032  4390              BICS     r0,r0,r2
000034  6348              STR      r0,[r1,#0x34]
;;;36     }
000036  4770              BX       lr
;;;37     
                          ENDP

                  |L1.56|
                          DCD      0x00800040
                  |L1.60|
                          DCD      0x00000771

                          AREA ||i.bim_main||, CODE, READONLY, ALIGN=1

                  bim_main PROC
;;;41     
;;;42     void bim_main(void)
000000  b570              PUSH     {r4-r6,lr}
;;;43     {
;;;44     	int32_t main_point = MAIN_IMAGE_RUN_ADDR;
;;;45     
;;;46     	updata_memset32((uint8_t *)0x00400000, 1, 1);
000002  2201              MOVS     r2,#1
000004  2481              MOVS     r4,#0x81              ;44
000006  0595              LSLS     r5,r2,#22
000008  0164              LSLS     r4,r4,#5              ;44
00000a  0011              MOVS     r1,r2
00000c  0028              MOVS     r0,r5
00000e  f7fffffe          BL       updata_memset32
;;;47     
;;;48     	bim_icu_init(ICU_CLK_16M);
000012  2000              MOVS     r0,#0
000014  f7fffffe          BL       bim_icu_init
;;;49     
;;;50     	bim_flash_init();
000018  f7fffffe          BL       bim_flash_init
;;;51     
;;;52     	//bim_uart_init(115200);
;;;53     
;;;54     	//REG_AHB0_ICU_INT_ENABLE = (0x01 << 5);
;;;55     	//REG_AHB0_ICU_IRQ_ENABLE = 0x03;
;;;56     	//__enable_irq();
;;;57     	//__disable_irq( );
;;;58     	//REG_AHB0_ICU_INT_ENABLE = 0x00;
;;;59     	//REG_AHB0_ICU_IRQ_ENABLE = 0x00;
;;;60     	updata_memset32((uint8_t *)0x00400000, 0, 1);
00001c  2201              MOVS     r2,#1
00001e  2100              MOVS     r1,#0
000020  0028              MOVS     r0,r5
000022  f7fffffe          BL       updata_memset32
;;;61     	//bim_uart_deinit();	
;;;62     	if(1 == bim_select_sec())
000026  f7fffffe          BL       bim_select_sec
00002a  2801              CMP      r0,#1
00002c  d100              BNE      |L2.48|
;;;63     	{
;;;64     		(*(FUNCPTR)main_point)();
00002e  47a0              BLX      r4
                  |L2.48|
;;;65     	}
;;;66     
;;;67     
;;;68     }
000030  bd70              POP      {r4-r6,pc}
;;;69     
                          ENDP


                          AREA ||i.updata_memset32||, CODE, READONLY, ALIGN=1

                  updata_memset32 PROC
;;;13     
;;;14     void  updata_memset32(void * dest, uint32_t value, uint32_t size)
000000  0112              LSLS     r2,r2,#4
;;;15     {
;;;16     	uint32_t *_u8_dest = (uint32_t *)dest;
;;;17     	uint32_t *_u8_end  = (uint32_t *)dest+size*4;
000002  1812              ADDS     r2,r2,r0
000004  e000              B        |L3.8|
                  |L3.6|
;;;18     
;;;19     	while (_u8_dest < _u8_end)
;;;20     	{
;;;21     		*_u8_dest++ = value;
000006  c002              STM      r0!,{r1}
                  |L3.8|
000008  4290              CMP      r0,r2                 ;19
00000a  d3fc              BCC      |L3.6|
;;;22     	}
;;;23     }
00000c  4770              BX       lr
;;;24     
                          ENDP

